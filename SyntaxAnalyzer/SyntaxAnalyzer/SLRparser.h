#pragma once
#include "SententialForm.h"
#include "Exception.h"
#include <stack>

class SententialForm;
class Exception;

class SLRparser
{
private:
	stack<int> st;					// stack
	SYMBOL nextInputSymbol;			// next input symbol
	int splitter;					// splitter
	bool isFinish;					// check if parsing is finished

public:
	SLRparser();
	~SLRparser();

	template <class T>
	int toIndex(const T, const vector<T>);
	void SLRparsing(SententialForm&);
	void changeState(SententialForm&, const int, const int);

	bool getIsFinish();
	bool checkAccept(SententialForm&);
};


/* shift-reduce */
enum class ACTION {
	SHIFT = 0, REDUCE, EMPTY
};

/* a state of SLR parsing table */
typedef struct {
	ACTION action;
	int actionNum = -1;
} State;

/* SLR parsing table (ACION part) */
const vector<SYMBOL> inputSymbolList_Action = { SYMBOL::VTYPE, SYMBOL::NUM, SYMBOL::FLOAT, SYMBOL::LITERAL, SYMBOL::ID, 
												SYMBOL:: IF, SYMBOL:: ELSE, SYMBOL:: WHILE, SYMBOL:: FOR, SYMBOL:: RETURN, 
												SYMBOL:: ADDSUB, SYMBOL:: MULTDIV, SYMBOL:: ASSIGN, SYMBOL:: COMP, SYMBOL:: SEMI, 
												SYMBOL:: COMMA, SYMBOL:: LPAREN, SYMBOL:: RPAREN, SYMBOL:: LBRACE, SYMBOL:: RBRACE, 
												SYMBOL:: ENDMARKER};
/*  */
typedef struct {
	int row;
	SYMBOL column;
	State action;
} SRLTable;

const vector<SRLTable> SLRtable_Action = {
	{ 0,	SYMBOL::VTYPE,		{ACTION::SHIFT,		6}},
	{ 0,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	4}},
	{ 1,	SYMBOL::VTYPE,		{ACTION::SHIFT,		6}},
	{ 1,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	4}},
	{ 2,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	2}},
	{ 3,	SYMBOL::VTYPE,		{ACTION::SHIFT,		6}},
	{ 3,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	4}},
	{ 4,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	3}},
	{ 5,	SYMBOL::ID,			{ACTION::SHIFT,		9}},
	{ 6,	SYMBOL::SEMI,		{ACTION::SHIFT,		8}},
	{ 7,	SYMBOL::VTYPE,		{ACTION::REDUCE,	6}},
	{ 7,	SYMBOL::IF,			{ACTION::REDUCE,	6}},
	{ 7,	SYMBOL::WHILE,		{ACTION::REDUCE,	6}},
	{ 7,	SYMBOL::FOR,		{ACTION::REDUCE,	6}},
	{ 7,	SYMBOL::RETURN,		{ACTION::REDUCE,	6}},
	{ 7,	SYMBOL::RBRACE,		{ACTION::REDUCE,	6}},
	{ 7,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	6}},
	{ 8,	SYMBOL::ASSIGN,		{ACTION::SHIFT,		69}},
	{ 8,	SYMBOL::SEMI,		{ACTION::SHIFT,		10}},
	{ 8,	SYMBOL::LPAREN,		{ACTION::SHIFT,		11}},
	{ 9,	SYMBOL::VTYPE,		{ACTION::REDUCE,	5}},
	{ 9,	SYMBOL::IF,			{ACTION::REDUCE,	5}},
	{ 9,	SYMBOL::WHILE,		{ACTION::REDUCE,	5}},
	{ 9,	SYMBOL::FOR,		{ACTION::REDUCE,	5}},
	{ 9,	SYMBOL::RETURN,		{ACTION::REDUCE,	5}},
	{ 9,	SYMBOL::RBRACE,		{ACTION::REDUCE,	5}},
	{ 9,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	5}},
	{ 10,	SYMBOL::VTYPE,		{ACTION::SHIFT,		12}},
	{ 10,	SYMBOL::RPAREN,		{ACTION::REDUCE,	10}},
	{ 11,	SYMBOL::ID,			{ACTION::SHIFT,		13}},
	{ 12,	SYMBOL::COMMA,		{ACTION::SHIFT,		15}},
	{ 12,	SYMBOL::RPAREN,		{ACTION::REDUCE,	12}},
	{ 13,	SYMBOL::RPAREN,		{ACTION::REDUCE,	9}},
	{ 14,	SYMBOL::VTYPE,		{ACTION::SHIFT,		16}},
	{ 15,	SYMBOL::ID,			{ACTION::SHIFT,		17}},
	{ 16,	SYMBOL::COMMA,		{ACTION::SHIFT,		15}},
	{ 16,	SYMBOL::RPAREN,		{ACTION::REDUCE,	12}},
	{ 17,	SYMBOL::RPAREN,		{ACTION::REDUCE,	11}},
	{ 18,	SYMBOL::RPAREN,		{ACTION::SHIFT,		20}},
	{ 19,	SYMBOL::LBRACE,		{ACTION::SHIFT,		21}},
	{ 20,	SYMBOL::VTYPE,		{ACTION::SHIFT,		22}},
	{ 20,	SYMBOL::ID,			{ACTION::SHIFT,		27}},
	{ 20,	SYMBOL::IF,			{ACTION::SHIFT,		28}},
	{ 20,	SYMBOL::WHILE,		{ACTION::SHIFT,		51}},
	{ 20,	SYMBOL::FOR,		{ACTION::SHIFT,		58}},
	{ 20,	SYMBOL::RETURN,		{ACTION::REDUCE,	14}},
	{ 20,	SYMBOL::RBRACE,		{ACTION::REDUCE,	14}},
	{ 21,	SYMBOL::ID,			{ACTION::SHIFT,		23}},
	{ 22,	SYMBOL::ASSIGN,		{ACTION::SHIFT,		69}},
	{ 22,	SYMBOL::SEMI,		{ACTION::SHIFT,		10}},
	{ 23,	SYMBOL::VTYPE,		{ACTION::REDUCE,	15}},
	{ 23,	SYMBOL::ID,			{ACTION::REDUCE,	15}},
	{ 23,	SYMBOL::IF,			{ACTION::REDUCE,	15}},
	{ 23,	SYMBOL::WHILE,		{ACTION::REDUCE,	15}},
	{ 23,	SYMBOL::FOR,		{ACTION::REDUCE,	15}},
	{ 23,	SYMBOL::RETURN,		{ACTION::REDUCE,	15}},
	{ 23,	SYMBOL::RBRACE,		{ACTION::REDUCE,	15}},
	{ 24,	SYMBOL::SEMI,		{ACTION::SHIFT,		26}},
	{ 25,	SYMBOL::VTYPE,		{ACTION::REDUCE,	16}},
	{ 25,	SYMBOL::ID,			{ACTION::REDUCE,	16}},
	{ 25,	SYMBOL::IF,			{ACTION::REDUCE,	16}},
	{ 25,	SYMBOL::WHILE,		{ACTION::REDUCE,	16}},
	{ 25,	SYMBOL::FOR,		{ACTION::REDUCE,	16}},
	{ 25,	SYMBOL::RETURN,		{ACTION::REDUCE,	16}},
	{ 25,	SYMBOL::RBRACE,		{ACTION::REDUCE,	16}},
	{ 26,	SYMBOL::ASSIGN,		{ACTION::SHIFT,		69}},
	{ 27,	SYMBOL::LPAREN,		{ACTION::SHIFT,		29}},
	{ 28,	SYMBOL::NUM,		{ACTION::SHIFT,		82}},
	{ 28,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83}},
	{ 28,	SYMBOL::ID,			{ACTION::SHIFT,		81}},
	{ 28,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77}},
	{ 29,	SYMBOL::VTYPE,		{ACTION::SHIFT,		22}},
	{ 29,	SYMBOL::ID,			{ACTION::SHIFT,		27}},
	{ 29,	SYMBOL::IF,			{ACTION::SHIFT,		28}},
	{ 29,	SYMBOL::WHILE,		{ACTION::SHIFT,		51}},
	{ 29,	SYMBOL::FOR,		{ACTION::SHIFT,		58}},
	{ 29,	SYMBOL::RETURN,		{ACTION::REDUCE,	14}},
	{ 29,	SYMBOL::RBRACE,		{ACTION::REDUCE,	14}},
	{ 30,	SYMBOL::RETURN,		{ACTION::REDUCE,	13}},
	{ 30,	SYMBOL::RBRACE,		{ACTION::REDUCE,	13}},
	{ 31,	SYMBOL::RPAREN,		{ACTION::SHIFT,		33}},
	{ 32,	SYMBOL::LBRACE,		{ACTION::SHIFT,		34}},
	{ 33,	SYMBOL::VTYPE,		{ACTION::SHIFT,		22}},
	{ 33,	SYMBOL::ID,			{ACTION::SHIFT,		27}},
	{ 33,	SYMBOL::IF,			{ACTION::SHIFT,		28}},
	{ 33,	SYMBOL::WHILE,		{ACTION::SHIFT,		51}},
	{ 33,	SYMBOL::FOR,		{ACTION::SHIFT,		58}},
	{ 33,	SYMBOL::RETURN,		{ACTION::REDUCE,	14}},
	{ 33,	SYMBOL::RBRACE,		{ACTION::REDUCE,	14}},
	{ 34,	SYMBOL::RBRACE,		{ACTION::SHIFT,		36}},
	{ 35,	SYMBOL::VTYPE,		{ACTION::REDUCE,	21}},
	{ 35,	SYMBOL::ID,			{ACTION::REDUCE,	21}},
	{ 35,	SYMBOL::IF,			{ACTION::REDUCE,	21}},
	{ 35,	SYMBOL::ELSE,		{ACTION::SHIFT,		38}},
	{ 35,	SYMBOL::WHILE,		{ACTION::REDUCE,	21}},
	{ 35,	SYMBOL::FOR,		{ACTION::REDUCE,	21}},
	{ 35,	SYMBOL::RETURN,		{ACTION::REDUCE,	21}},
	{ 35,	SYMBOL::RBRACE,		{ACTION::REDUCE,	21}},
	{ 36,	SYMBOL::VTYPE,		{ACTION::REDUCE,	17}},
	{ 36,	SYMBOL::ID,			{ACTION::REDUCE,	17}},
	{ 36,	SYMBOL::IF,			{ACTION::REDUCE,	17}},
	{ 36,	SYMBOL::WHILE,		{ACTION::REDUCE,	17}},
	{ 36,	SYMBOL::FOR,		{ACTION::REDUCE,	17}},
	{ 36,	SYMBOL::RETURN,		{ACTION::REDUCE,	17}},
	{ 36,	SYMBOL::RBRACE,		{ACTION::REDUCE,	17}},
	{ 37,	SYMBOL::LBRACE,		{ACTION::SHIFT,		39}},
	{ 38,	SYMBOL::VTYPE,		{ACTION::SHIFT,		22}},
	{ 38,	SYMBOL::ID,			{ACTION::SHIFT,		27}},
	{ 38,	SYMBOL::IF,			{ACTION::SHIFT,		28}},
	{ 38,	SYMBOL::WHILE,		{ACTION::SHIFT,		51}},
	{ 38,	SYMBOL::FOR,		{ACTION::SHIFT,		58}},
	{ 38,	SYMBOL::RETURN,		{ACTION::REDUCE,	14}},
	{ 38,	SYMBOL::RBRACE,		{ACTION::REDUCE,	14}},
	{ 39,	SYMBOL::RBRACE,		{ACTION::SHIFT,		41}},
	{ 40,	SYMBOL::VTYPE,		{ACTION::REDUCE,	20}},
	{ 40,	SYMBOL::ID,			{ACTION::REDUCE,	20}},
	{ 40,	SYMBOL::IF,			{ACTION::REDUCE,	20} },
	{ 40,	SYMBOL::WHILE,		{ACTION::REDUCE,	20} },
	{ 40,	SYMBOL::FOR,		{ACTION::REDUCE,	20} },
	{ 40,	SYMBOL::RETURN,		{ACTION::REDUCE,	20} },
	{ 40,	SYMBOL::RBRACE,		{ACTION::REDUCE,	20} },
	{ 41,	SYMBOL::COMP,		{ACTION::SHIFT,		43} },
	{ 42,	SYMBOL::NUM,		{ACTION::SHIFT,		82} },
	{ 42,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83} },
	{ 42,	SYMBOL::ID,			{ACTION::SHIFT,		81} },
	{ 42,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77} },
	{ 43,	SYMBOL::SEMI,		{ACTION::REDUCE,	32} },
	{ 43,	SYMBOL::RPAREN,		{ACTION::REDUCE,	32} },
	{ 44,	SYMBOL::RETURN,		{ACTION::SHIFT,		48} },
	{ 45,	SYMBOL::RBRACE,		{ACTION::SHIFT,		47} },
	{ 46,	SYMBOL::VTYPE,		{ACTION::REDUCE,	8} },
	{ 46,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	8} },
	{ 47,	SYMBOL::NUM,		{ACTION::SHIFT,		82} },
	{ 47,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83} },
	{ 47,	SYMBOL::ID,			{ACTION::SHIFT,		81} },
	{ 47,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77} },
	{ 48,	SYMBOL::SEMI,		{ACTION::SHIFT,		50} },
	{ 49,	SYMBOL::RBRACE,		{ACTION::REDUCE,	33} },
	{ 50,	SYMBOL::LPAREN,		{ACTION::SHIFT,		52} },
	{ 51,	SYMBOL::NUM,		{ACTION::SHIFT,		82} },
	{ 51,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83} },
	{ 51,	SYMBOL::ID,			{ACTION::SHIFT,		81} },
	{ 51,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77} },
	{ 52,	SYMBOL::RPAREN,		{ACTION::SHIFT,		54} },
	{ 53,	SYMBOL::LBRACE,		{ACTION::SHIFT,		55} },
	{ 54,	SYMBOL::VTYPE,		{ACTION::SHIFT,		22} },
	{ 54,	SYMBOL::ID,			{ACTION::SHIFT,		27} },
	{ 54,	SYMBOL::IF,			{ACTION::SHIFT,		28} },
	{ 54,	SYMBOL::WHILE,		{ACTION::SHIFT,		51} },
	{ 54,	SYMBOL::FOR,		{ACTION::SHIFT,		58} },
	{ 54,	SYMBOL::RETURN,		{ACTION::REDUCE,	14} },
	{ 54,	SYMBOL::RBRACE,		{ACTION::REDUCE,	14} },
	{ 55,	SYMBOL::RBRACE,		{ACTION::SHIFT,		57} },
	{ 56,	SYMBOL::VTYPE,		{ACTION::REDUCE,	18} },
	{ 56,	SYMBOL::ID,			{ACTION::REDUCE,	18} },
	{ 56,	SYMBOL::IF,			{ACTION::REDUCE,	18} },
	{ 56,	SYMBOL::WHILE,		{ACTION::REDUCE,	18} },
	{ 56,	SYMBOL::FOR,		{ACTION::REDUCE,	18} },
	{ 56,	SYMBOL::RETURN,		{ACTION::REDUCE,	18} },
	{ 56,	SYMBOL::RBRACE,		{ACTION::REDUCE,	18} },
	{ 57,	SYMBOL::LPAREN,		{ACTION::SHIFT,		59} },
	{ 58,	SYMBOL::ID,			{ACTION::SHIFT,		27} },
	{ 59,	SYMBOL::SEMI,		{ACTION::SHIFT,		61} },
	{ 60,	SYMBOL::NUM,		{ACTION::SHIFT,		82} },
	{ 60,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83} },
	{ 60,	SYMBOL::ID,			{ACTION::SHIFT,		81} },
	{ 60,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77} },
	{ 61,	SYMBOL::SEMI,		{ACTION::SHIFT,		63} },
	{ 62,	SYMBOL::ID,			{ACTION::SHIFT,		27} },
	{ 63,	SYMBOL::RPAREN,		{ACTION::SHIFT,		65} },
	{ 64,	SYMBOL::LBRACE,		{ACTION::SHIFT,		66} },
	{ 65,	SYMBOL::VTYPE,		{ACTION::SHIFT,		22} },
	{ 65,	SYMBOL::ID,			{ACTION::SHIFT,		27} },
	{ 65,	SYMBOL::IF,			{ACTION::SHIFT,		28} },
	{ 65,	SYMBOL::WHILE,		{ACTION::SHIFT,		51} },
	{ 65,	SYMBOL::FOR,		{ACTION::SHIFT,		58} },
	{ 65,	SYMBOL::RETURN,		{ACTION::REDUCE,	14} },
	{ 65,	SYMBOL::RBRACE,		{ACTION::REDUCE,	14} },
	{ 66,	SYMBOL::RBRACE,		{ACTION::SHIFT,		68} },
	{ 67,	SYMBOL::VTYPE,		{ACTION::REDUCE,	19} },
	{ 67,	SYMBOL::ID,			{ACTION::REDUCE,	19} },
	{ 67,	SYMBOL::IF,			{ACTION::REDUCE,	19} },
	{ 67,	SYMBOL::WHILE,		{ACTION::REDUCE,	19} },
	{ 67,	SYMBOL::FOR,		{ACTION::REDUCE,	19} },
	{ 67,	SYMBOL::RETURN,		{ACTION::REDUCE,	19} },
	{ 67,	SYMBOL::RBRACE,		{ACTION::REDUCE,	19} },
	{ 68,	SYMBOL::NUM,		{ACTION::SHIFT,		82} },
	{ 68,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83} },
	{ 68,	SYMBOL::LITERAL,	{ACTION::SHIFT,		71} },
	{ 68,	SYMBOL::ID,			{ACTION::SHIFT,		81} },
	{ 68,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77} },
	{ 69,	SYMBOL::SEMI,		{ACTION::REDUCE,	7} },
	{ 69,	SYMBOL::RPAREN,		{ACTION::REDUCE,	7} },
	{ 70,	SYMBOL::SEMI,		{ACTION::REDUCE,	23} },
	{ 70,	SYMBOL::RPAREN,		{ACTION::REDUCE,	23} },
	{ 71,	SYMBOL::SEMI,		{ACTION::REDUCE,	22} },
	{ 71,	SYMBOL::RPAREN,		{ACTION::REDUCE,	22} },
	{ 72,	SYMBOL::NUM,		{ACTION::SHIFT,		82} },
	{ 72,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83} },
	{ 72,	SYMBOL::ID,			{ACTION::SHIFT,		81} },
	{ 72,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77} },
	{ 73,	SYMBOL::ADDSUB,		{ACTION::SHIFT,		75} },
	{ 73,	SYMBOL::SEMI,		{ACTION::REDUCE,	25} },
	{ 73,	SYMBOL::RPAREN,		{ACTION::REDUCE,	25} },
	{ 74,	SYMBOL::NUM,		{ACTION::SHIFT,		82} },
	{ 74,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83} },
	{ 74,	SYMBOL::ID,			{ACTION::SHIFT,		81} },
	{ 74,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77} },
	{ 75,	SYMBOL::SEMI,		{ACTION::REDUCE,	24} },
	{ 75,	SYMBOL::RPAREN,		{ACTION::REDUCE,	24} },
	{ 76,	SYMBOL::NUM,		{ACTION::SHIFT,		82} },
	{ 76,	SYMBOL::FLOAT,		{ACTION::SHIFT,		83} },
	{ 76,	SYMBOL::ID,			{ACTION::SHIFT,		81} },
	{ 76,	SYMBOL::LPAREN,		{ACTION::SHIFT,		77} },
	{ 77,	SYMBOL::RPAREN,		{ACTION::SHIFT,		79} },
	{ 78,	SYMBOL::ADDSUB,		{ACTION::REDUCE,	28} },
	{ 78,	SYMBOL::MULTDIV,	{ACTION::REDUCE,	28} },
	{ 78,	SYMBOL::COMP,		{ACTION::REDUCE,	28} },
	{ 78,	SYMBOL::SEMI,		{ACTION::REDUCE,	28} },
	{ 78,	SYMBOL::RPAREN,		{ACTION::REDUCE,	28} },
	{ 79,	SYMBOL::ADDSUB,		{ACTION::REDUCE,	27} },
	{ 79,	SYMBOL::MULTDIV,	{ACTION::SHIFT,		73} },
	{ 79,	SYMBOL::SEMI,		{ACTION::REDUCE,	27} },
	{ 79,	SYMBOL::RPAREN,		{ACTION::REDUCE,	27} },
	{ 80,	SYMBOL::ADDSUB,		{ACTION::REDUCE,	29} },
	{ 80,	SYMBOL::MULTDIV,	{ACTION::REDUCE,	29} },
	{ 80,	SYMBOL::COMP,		{ACTION::REDUCE,	29} },
	{ 80,	SYMBOL::SEMI,		{ACTION::REDUCE,	29} },
	{ 80,	SYMBOL::RPAREN,		{ACTION::REDUCE,	29} },
	{ 81,	SYMBOL::ADDSUB,		{ACTION::REDUCE,	30} },
	{ 81,	SYMBOL::MULTDIV,	{ACTION::REDUCE,	30} },
	{ 81,	SYMBOL::COMP,		{ACTION::REDUCE,	30} },
	{ 81,	SYMBOL::SEMI,		{ACTION::REDUCE,	30} },
	{ 81,	SYMBOL::RPAREN,		{ACTION::REDUCE,	30} },
	{ 82,	SYMBOL::ADDSUB,		{ACTION::REDUCE,	31} },
	{ 82,	SYMBOL::MULTDIV,	{ACTION::REDUCE,	31} },
	{ 82,	SYMBOL::COMP,		{ACTION::REDUCE,	31} },
	{ 82,	SYMBOL::SEMI,		{ACTION::REDUCE,	31} },
	{ 82,	SYMBOL::RPAREN,		{ACTION::REDUCE,	31} },
	{ 83,	SYMBOL::ADDSUB,		{ACTION::REDUCE,	26} },
	{ 83,	SYMBOL::SEMI,		{ACTION::REDUCE,	26} },
	{ 83,	SYMBOL::RPAREN,		{ACTION::REDUCE,	26} },
	{ 84,	SYMBOL::ENDMARKER,	{ACTION::REDUCE,	1} },
};
/* SLR parsing table (GOTO part) */
const vector<SYMBOL> inputSymbolList_Goto = {	SYMBOL::CODE, SYMBOL::VDECL, SYMBOL::FDECL, SYMBOL::ARG, SYMBOL::MOREARGS,
												SYMBOL::BLOCK, SYMBOL:: STMT, SYMBOL:: ASSIGN, SYMBOL:: RHS, SYMBOL:: EXPR,
												SYMBOL:: TERM, SYMBOL:: FACTOR, SYMBOL:: COND, SYMBOL:: RETURN, SYMBOL:: ELSE};
const vector<vector<int>> SLRtable_Goto = {
	{2, 3, 0},
	{0, 0, 0},
	{0, 0, 0},
	{7, 3, 0},
	{0, 0, 0},
	{8, 3, 0},
	{0, 0, 0},
	{0, 0, 0},
	{0, 0, 0},
};


/* context free grammar G */
typedef struct {
	SYMBOL symbol;
	int length;
} Production;

const vector<Production> CFG = {
	{SYMBOL::START, 1},
	{SYMBOL::CODE, 2},
	{SYMBOL::CODE, 2},
	{SYMBOL::CODE, 0},
	{SYMBOL::VDECL, 3},
	{SYMBOL::VDECL, 3},
	{SYMBOL::ASSIGN, 3},
	{SYMBOL::FDECL, 9},
	{SYMBOL::ARG, 3},
	{SYMBOL::ARG, 0},
	{SYMBOL::MOREARGS, 4},
	{SYMBOL::MOREARGS, 0},
	{SYMBOL::BLOCK, 2},
	{SYMBOL::BLOCK, 0},
	{SYMBOL::STMT, 1},
	{SYMBOL::STMT, 2},
	{SYMBOL::STMT, 8},
	{SYMBOL::STMT, 7},
	{SYMBOL::STMT, 11},
	{SYMBOL::ELSE, 4}
	{SYMBOL::ELSE, 0},
	{SYMBOL::RHS, 1},
	{SYMBOL::RHS, 1},
	{SYMBOL::EXPR, 3},
	{SYMBOL::EXPR, 1},
	{SYMBOL::TERM, 3},
	{SYMBOL::TERM, 1},
	{SYMBOL::FACTOR, 3},
	{SYMBOL::FACTOR, 1},
	{SYMBOL::FACTOR, 1},
	{SYMBOL::FACTOR, 1},
	{SYMBOL::COND, 3},
	{SYMBOL::RETURN, 3}
};

const vector<vector<SYMBOL>> CFG = {
	{SYMBOL::CODE, SYMBOL::VDECL, SYMBOL::CODE},
	{SYMBOL::CODE, SYMBOL::FDECL, SYMBOL::CODE},
	{SYMBOL::CODE, SYMBOL::EPSILON},

	{SYMBOL::VDECL, SYMBOL::VTYPE, SYMBOL::ID, SYMBOL::SEMI},
	{SYMBOL::VDECL, SYMBOL::VTYPE, SYMBOL::ASSIGN_NON, SYMBOL::SEMI},

	{SYMBOL::ASSIGN_NON, SYMBOL::ID, SYMBOL::ASSIGN, SYMBOL::RHS},

	{SYMBOL::FDECL, SYMBOL::VTYPE, SYMBOL::ID, SYMBOL::LPAREN, SYMBOL::ARG, SYMBOL::RPAREN, SYMBOL::LBRACE, SYMBOL::BLOCK, SYMBOL::RETURN_NON, SYMBOL::RBRACE},

	{SYMBOL::ARG, SYMBOL::VTYPE, SYMBOL::ID, SYMBOL::MOREARGS},
	{SYMBOL::ARG, SYMBOL::EPSILON},

	{SYMBOL::MOREARGS, SYMBOL::COMMA, SYMBOL::VTYPE, SYMBOL::ID, SYMBOL::MOREARGS},
	{SYMBOL::MOREARGS, SYMBOL::EPSILON},

	{SYMBOL::BLOCK, SYMBOL::STMT, SYMBOL::BLOCK},
	{SYMBOL::BLOCK, SYMBOL::EPSILON},

	{SYMBOL::STMT, SYMBOL::VDECL},
	{SYMBOL::STMT, SYMBOL::ASSIGN, SYMBOL::SEMI},
	{SYMBOL::STMT, SYMBOL::IF, SYMBOL::LPAREN, SYMBOL::COND, SYMBOL::RPAREN, SYMBOL::LBRACE, SYMBOL::BLOCK, SYMBOL::RBRACE, SYMBOL::ELSE},
	{SYMBOL::STMT, SYMBOL::WHILE, SYMBOL::LPAREN, SYMBOL::COND, SYMBOL::RPAREN, SYMBOL::LBRACE, SYMBOL::BLOCK, SYMBOL::RBRACE, SYMBOL::ELSE}
};